/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
        ext.when   = { !params.skip_fastqc }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/fastqc/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: ERCC_CREATE {
        publishDir = [
            enabled: false
        ]
    }

    withName: CAT_FASTA {
        publishDir = [
            path: { "${params.outdir}/references/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: BOWTIE2_BUILD {
        publishDir = [
            path: { "${params.outdir}/references/" },
            mode: params.publish_dir_mode,
        ]
    }

    withName: STAR_GENOMEGENERATE {
        ext.args = "--sjdbOverhang ${params.read_length - 1}"
        publishDir = [
            path: { "${params.outdir}/references/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: PREPARE {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/data" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTP_SPLIT {
        ext.args = "--split_by_lines 10000000"
        publishDir = [
            enabled: false
        ]
    }

    withName: EXTRACT_LABELS {
        publishDir = [
            enabled: false
        ]
    }

    withName: BOWTIE2_ALIGN {
        ext.args2 = "--output-fmt SAM"
        ext.prefix = { "${meta.filename}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: QC_ALIGNED {
        ext.when   = { !params.skip_qc }
        publishDir = [
            enabled: false
        ]
    }

    withName: CUT_SAM {
        publishDir = [
            enabled: false
        ]
    }

    withName: MERGE_READS {
        ext.prefix = { "${meta.id}.sam" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: DEMULTIPLEX {
        ext.args = "20 1 20 1"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') | filename.equals('output_tmp') ? null : filename }
        ]
    }

    withName: QC_BATCH {
        ext.when   = { !params.skip_qc }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/QC/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: QC_REPORT {
        ext.when   = { !params.skip_qc }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/output/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename -> filename.equals('versions.yml') ? null :
                filename.contains('output') ? filename.minus('output/') :
                filename
            }
        ]
    }

    withName: 'VELOCITY_CONVERT|CAT_FASTQ' {
        publishDir = [
            enabled: false
        ]
    }

    withName: VELOCITY_WHITELIST {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/velocity/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: VELOCITY_TRIM {
        ext.args = "-m 20 -A 'T{68}' --pair-filter=both"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/velocity/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: STARSOLO {
        ext.args = "--outSAMtype BAM SortedByCoordinate --soloFeatures Gene Velocyto"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/velocity/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
